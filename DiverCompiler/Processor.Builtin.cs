using System.Collections.Generic;

namespace MCURoutineCompiler;

internal partial class Processor
{
    internal static List<string> BuiltIn =
    [
        "System.Object..ctor()",
        "System.Math.Abs(Decimal)",
        "System.Math.Abs(Double)",
        "System.Math.Abs(Int16)",
        "System.Math.Abs(Int32)",
        "System.Math.Abs(Int64)",
        "System.Math.Abs(SByte)",
        "System.Math.Abs(Single)",
        "System.Math.Acos(Double)",
        "System.Math.Acosh(Double)",
        "System.Math.Asin(Double)",
        "System.Math.Asinh(Double)",
        "System.Math.Atan(Double)",
        "System.Math.Atan2(Double, Double)",
        "System.Math.Atanh(Double)",
        "System.Math.Ceiling(Double)",
        "System.Math.Clamp(Double, Double, Double)",
        "System.Math.Clamp(Int16, Int16, Int16)",
        "System.Math.Clamp(Int32, Int32, Int32)",
        "System.Math.Clamp(Int64, Int64, Int64)",
        "System.Math.Clamp(SByte, SByte, SByte)",
        "System.Math.Clamp(Single, Single, Single)",
        "System.Math.Cos(Double)",
        "System.Math.Cosh(Double)",
        "System.Math.Exp(Double)",
        "System.Math.Floor(Double)",
        "System.Math.Log(Double)",
        "System.Math.Log(Double, Double)",
        "System.Math.Log10(Double)",
        "System.Math.Log2(Double)",
        "System.Math.Max(Double, Double)",
        "System.Math.Max(Int16, Int16)",
        "System.Math.Max(Int32, Int32)",
        "System.Math.Max(Int64, Int64)",
        "System.Math.Max(SByte, SByte)",
        "System.Math.Max(Single, Single)",
        "System.Math.Min(Decimal, Decimal)",
        "System.Math.Min(Double, Double)",
        "System.Math.Min(Int16, Int16)",
        "System.Math.Min(Int32, Int32)",
        "System.Math.Min(Int64, Int64)",
        "System.Math.Min(SByte, SByte)",
        "System.Math.Min(Single, Single)",
        "System.Math.Pow(Double, Double)",
        "System.Math.Round(Double)",
        "System.Math.Sign(Double)",
        "System.Math.Sign(Int16)",
        "System.Math.Sign(Int32)",
        "System.Math.Sign(Int64)",
        "System.Math.Sign(SByte)",
        "System.Math.Sign(Single)",
        "System.Math.Sin(Double)",
        "System.Math.Sinh(Double)",
        "System.Math.Sqrt(Double)",
        "System.Math.Tan(Double)",
        "System.Math.Tanh(Double)",

        "System.String.Format(String, Object)",
        "System.String.Format(String, Object, Object)",
        "System.String.Format(String, Object, Object, Object)",
        "System.String.Format(String, Object[])",
        "System.String.Concat(String, String)",
        "System.String.Concat(String, String, String)",
        "System.String.Concat(String, String, String, String)",
        "System.String.Substring(Int32, Int32)",
        "System.String.get_Length()",

        "CartActivator.RunOnMCU.ReadEvent(Int32, Int32)",
        "CartActivator.RunOnMCU.ReadSnapshot()",
        "CartActivator.RunOnMCU.ReadStream(Int32)",
        "CartActivator.RunOnMCU.WriteEvent(Byte[], Int32, Int32)",
        "CartActivator.RunOnMCU.WriteSnapshot(Byte[])",
        "CartActivator.RunOnMCU.WriteStream(Byte[], Int32)",

        "CartActivator.RunOnMCU.GetMicrosFromStart()",
        "CartActivator.RunOnMCU.GetMillisFromStart()",
        "CartActivator.RunOnMCU.GetSecondsFromStart()",

        "System.ValueTuple`2..ctor(T1, T2)",
        "System.ValueTuple`3..ctor(T1, T2, T3)",
        "System.ValueTuple`4..ctor(T1, T2, T3, T4)",

        "System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray(Array, RuntimeFieldHandle)",
        "System.Boolean.ToString()",
        "System.Int16.ToString()",
        "System.Int32.ToString()",
        "System.Single.ToString()",

        "System.Action..ctor(Object, IntPtr)",
        "System.Action.Invoke(T)",
        "System.Action`1..ctor(Object, IntPtr)",
        "System.Action`1.Invoke(T)",
        "System.Action`2..ctor(Object, IntPtr)",
        "System.Action`2.Invoke(T1, T2)",
        "System.Action`3..ctor(Object, IntPtr)",
        "System.Action`3.Invoke(T1, T2, T3)",
        "System.Action`4..ctor(Object, IntPtr)",
        "System.Action`4.Invoke(T1, T2, T3, T4)",
        "System.Action`5..ctor(Object, IntPtr)",
        "System.Action`5.Invoke(T1, T2, T3, T4, T5)",
        
        "System.Func`1..ctor(Object, IntPtr)",
        "System.Func`1.Invoke()",
        "System.Func`2..ctor(Object, IntPtr)",
        "System.Func`2.Invoke(T)",
        "System.Func`3..ctor(Object, IntPtr)",
        "System.Func`3.Invoke(T1, T2)",
        "System.Func`4..ctor(Object, IntPtr)",
        "System.Func`4.Invoke(T1, T2, T3)",
        "System.Func`5..ctor(Object, IntPtr)",
        "System.Func`5.Invoke(T1, T2, T3, T4)",
        "System.Func`6..ctor(Object, IntPtr)",
        "System.Func`6.Invoke(T1, T2, T3, T4, T5)",

        "System.Console.WriteLine(String)",

        // BitConverter
        "System.BitConverter.GetBytes(Boolean)",
        "System.BitConverter.GetBytes(Char)",
        "System.BitConverter.GetBytes(Int16)",
        "System.BitConverter.GetBytes(Int32)",
        "System.BitConverter.GetBytes(Single)",
        "System.BitConverter.GetBytes(UInt16)",
        "System.BitConverter.GetBytes(UInt32)",
        "System.BitConverter.ToBoolean(Byte[], Int32)",
        "System.BitConverter.ToChar(Byte[], Int32)",
        "System.BitConverter.ToInt16(Byte[], Int32)",
        "System.BitConverter.ToInt32(Byte[], Int32)",
        "System.BitConverter.ToSingle(Byte[], Int32)",
        "System.BitConverter.ToUInt16(Byte[], Int32)",
        "System.BitConverter.ToUInt32(Byte[], Int32)",
    ];

}